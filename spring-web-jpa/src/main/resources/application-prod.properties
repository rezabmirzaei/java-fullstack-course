# Database connection props
spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

# Hibernate behaviour
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create

# Enable logging of SQL
spring.jpa.show-sql=true

# Enable seeding. Doesn't use schema.sql but relies on Hibernate to create the schema.
spring.sql.init.platform=postgres
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Spring boot server configuration to include error messages in response
server.error.include-message=always

# Change default port (in case you have other services running on 8080)
# server.port=8081

# Swagger
springdoc.swagger-ui.operationsSorter=method

### LOGGING
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#features.logging

# Colors
spring.output.ansi.enabled=ALWAYS

# Log Levels
# FATAL > ERROR > WARN > INFO > DEBUG > TRACE
# Heads up! Logback does not have a FATAL level. It is mapped to ERROR.
logging.level.org.springframework=ERROR
logging.level.no.noroff=INFO
# Multiple packages
#logging.group.tomcat=org.apache.catalina, org.apache.coyote, org.apache.tomcat
#logging.level.tomcat=ERROR

# Log to File
#logging.file.name=logs/app.log
#logging.file.max-size=10MB
#logging.file.max-history=5

# Log Patterns
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n
